{"version":3,"sources":["index.jsx"],"names":["Guide","props","className","style","BulletArea","value","placeholder","rows","onChange","event","GuidedBulletArea","guides","BulletTester","ref","useRef","useState","width","setWidth","useEffect","current","offsetWidth","handleWidthChange","index","Toggle","label","type","checked","onClick","BulletEditor","state","bullets","widths","graberized","left","this","target","split","setState","forEach","bullet","replace","console","log","graberSpace","isWhiteSpace","element","rank","spaces","ranks","bulletArray","position","findIndex","push","elem","subArrayPosition","slice","newRanks","indexOfMaxValue","reduce","iMax","x","i","arr","demote","indexOfMinValue","iMin","promote","join","testers","id","handleAutoSpace","handleBulletChange","createBulletTesters","React","Component","BulletTime","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a5af4cce.chunk.js","sourcesContent":["import React, { useEffect, useLayoutEffect, useState, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\nfunction Guide(props) {\n  return(\n    <div className=\"guide\" style={props.style}></div>\n  );\n}\n\n\nfunction BulletArea(props) {\n  return (\n    <textarea\n      className=\"bullet-area\"\n      value={props.value}\n      placeholder=\"Write your bullets here...\"\n      rows=\"10\"\n      onChange={event => props.onChange(event)}\n    ></textarea>\n  );\n}\n\n\nfunction GuidedBulletArea(props) {\n  return (\n    <div className=\"guided-bullet-area\">\n      <BulletArea\n        value={props.value}\n        onChange={event => props.onChange(event)}\n      />\n      <Guide\n        style={props.guides[1]}\n      />\n    </div>\n  );\n}\n\n\nfunction BulletTester(props) {\n  const ref = useRef(null);\n  const [width, setWidth] = useState(0);\n\n  //Set the local state width any time the screen renders\n  useEffect(() => {\n    setWidth(ref.current ? ref.current.offsetWidth : 0);\n  });\n\n  //Set the parent width any time the local state width changes\n  useEffect(() => {\n    props.handleWidthChange(props.index, width);\n  }, [width, props.value]);\n  \n  return (\n    <div ref={ref} className=\"bullet-tester\">\n      {props.value}\n    </div>\n  );\n}\n\n\nfunction Toggle(props) {\n  return(\n    <div className=\"toggle-div\">\n    <label className=\"toggle-label\">{props.label}</label>\n      <label className=\"toggle\">\n        <input\n          type=\"checkbox\"\n          checked={props.checked}\n          onClick={() => props.onClick()}\n        />\n        <span className=\"slider round\"></span>\n      </label>\n    </div>\n  );\n}\n\n\nclass BulletEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bullets: [], //Array(1).fill('- Develops threat radar models/simulations; drives US/Allied radar warning reprogramming & intel mission data feeds'), //[].\n      widths: [],\n      graberized: false,\n      guides: [{left: '600px'}, {left: '763px'}, {left: '800px'}],\n    };\n  }\n\n  handleBulletChange(event) {\n    if (!this.state.graberized) {\n      var bullets = this.state.bullets;\n      bullets = event.target.value.split(\"\\n\");\n      this.setState({bullets: bullets});\n    }\n  }\n\n  handleAutoSpace() {\n    //If not currently graberized, that means it should now be\n    //graberized\n\n    var bullets = this.state.bullets;\n    bullets.forEach((bullet, index) => {\n\n      if (!this.state.graberized) {\n        console.log('trigger width', this.state.widths[index]);\n        bullets[index] = this.graberSpace(index, this.state.widths[index]);\n      } else { //Remove graber spaces\n        bullets[index] = bullet.replace(\n          /[\\u2004\\u2006\\u2007\\u2009]/g,\n          ' '\n        );\n      }\n    }, this);\n\n  this.setState({\n    bullets: bullets,\n    graberized: !this.state.graberized});\n}\n\n  handleWidthChange(index, width) {\n    let widths = this.state.widths;\n    widths[index] = width;\n    this.setState({widths: widths});\n    if (this.state.graberized) {\n      if (width < 759 || width > 763) {\n        var bullets = this.state.bullets;\n        bullets[index] = this.graberSpace(index, width);\n        this.setState({bullets: bullets});\n      }\n    }\n  }\n\n  graberSpace(index, width) {\n    /*\n      The best way to do this is recursively, changing a single\n      character at once and checking length as we go. That is because\n      these spaces don't have specific pixel widths associated with\n      them. Instead their widths are dynamic - based on font style,\n      size and the other characters around them. So while it sucks\n      that we need to use synchronous logic, atleast it only happens\n      when the user toggles the spacing on.\n\n      The whitespace unicode available for use with an OPR:\n      2006:approx-2px(smallest), 2009:approx-1px(small),\n      2004:approx+2px(big), 2007:approx+4px(biggest)\n    */\n\n    const promote = (ranks) => {\n      let newRanks = ranks;\n      // Intentionally slicing so that we don't change the first space\n      var indexOfMinValue = ranks.slice(1).reduce((iMin, x, i, arr) => x < arr[iMin] ? i : iMin, 0) + 1;\n      newRanks[indexOfMinValue]++;\n      if (newRanks[indexOfMinValue] > 4) {\n        newRanks[indexOfMinValue] = 4;\n      }\n      return(newRanks);\n    };\n\n    const demote = (ranks) => {\n      let newRanks = ranks;\n      // Intentionally slicing so that we don't change the first space\n      var indexOfMaxValue = ranks.slice(1).reduce((iMax, x, i, arr) => x > arr[iMax] ? i : iMax, 0) + 1;\n      newRanks[indexOfMaxValue]--;\n      if (newRanks[indexOfMaxValue] < 0) {\n        newRanks[indexOfMaxValue] = 0;\n      }\n      return(newRanks);\n    };\n\n    const isWhiteSpace = (element) => {\n      switch(element) {\n      case \"\\u2004\": return true;\n      case \"\\u2006\": return true;\n      case \"\\u2007\": return true;\n      case \"\\u2009\": return true;\n      case \" \": return true;\n      default: return false;\n      }\n    };\n\n    const rank = ['\\u2006', '\\u2009', ' ', '\\u2004', '\\u2007'];\n    var bullet = this.state.bullets[index];\n\n    let spaces = [];\n    let ranks = [];\n    let bulletArray = bullet.split(\"\");\n    \n    //Find all the white space character indexes\n    let position = bulletArray.findIndex(isWhiteSpace);\n    while (position !== -1) {\n      spaces.push(position);\n      ranks.push(rank.findIndex(elem => elem === bulletArray[position]));\n      let subArrayPosition = bulletArray.slice(position + 1).findIndex(isWhiteSpace);\n      if (subArrayPosition > 0) {\n        position = subArrayPosition + position + 1;\n      } else {\n        position = subArrayPosition;\n      }\n    }\n\n    if (width > 762) {\n      ranks = demote(ranks);\n    } else if (width < 762) {\n      ranks = promote(ranks);\n    }\n\n    console.log(ranks);\n    console.log(width);\n\n    spaces.forEach((position, index) => {\n      bulletArray[position] = rank[ranks[index]];\n    });\n\n    return bulletArray.join('');\n  }\n\n  createBulletTesters() {\n    var testers = [];\n    var bullets = this.state.bullets;\n\n    bullets.forEach(function(bullet, index) {\n      testers.push(\n        <BulletTester\n          value={bullet}\n          index={index}\n          handleWidthChange={(index, width) => this.handleWidthChange(index, width)}\n        />\n      );\n    }, this);\n\n    return(testers);\n  }\n\n  render() {\n    return (\n      <div >\n        <div id=\"editor_title\">\n          Bullet Editor\n          <Toggle\n            label=\"Apply Graber Spacing:\"\n            checked={this.state.graberized}\n            onClick={() => this.handleAutoSpace()}\n          />\n        </div>\n        <GuidedBulletArea\n          value={this.state.bullets.join(\"\\n\")}\n          guides={this.state.guides}\n          onChange={event => this.handleBulletChange(event)}\n        />\n        {this.createBulletTesters()}\n      </div>\n    );\n  }\n}\n      \nclass BulletTime extends React.Component {\n  render() {\n    return (\n      <div className=\"app\">\n\t<div className=\"game-board\">\n          <BulletEditor />\n\t</div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <BulletTime />,\n  document.getElementById('root')\n\n);\n"],"sourceRoot":""}